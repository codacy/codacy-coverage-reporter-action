# action.yml
name: 'Codacy Coverage Reporter'
description: 'Multi-language coverage reporter for Codacy'
branding:
  icon: 'check'
  color: 'gray-dark'
inputs:
  project-token:
    required: false
    description: "API project token to authenticate on the Codacy API while uploading the coverage data"
  api-token:
    required: false
    description: "API account token to authenticate on the Codacy API while uploading the coverage data"
  coverage-reports:
    description: 'Coverage report target. Supports Globs (e.g. `coverage/**/*.{xml,lcov}`)'
    required: false
    default: ''
  language:
    description: 'Optionally force associating a language with your coverage report'
    required: false
  force-coverage-parser:
    description: 'Optionally force using a specific coverage report parser'
    required: false
runs:
  using: "composite"
  steps:
    - name: "Set Repository Variables"
      shell: bash
      run: |
        echo "ORGANIZATION_PROVIDER=$(if [[ $GITHUB_SERVER_URL == "https://github.com" ]]; then echo "gh"; else echo "ghe"; fi)" >> $GITHUB_ENV
        echo "OWNER_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 1)" >> $GITHUB_ENV
        echo "REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)" >> $GITHUB_ENV
    - name: "Run coverage-reporter"
      shell: bash
      run: |
        set -eux

        auth=''
        if [ -n "${{ inputs.api-token }}" ]; then auth="--api-token ${{ inputs.api-token }} --organization-provider $ORGANIZATION_PROVIDER --username $OWNER_NAME --project-name $REPOSITORY_NAME"; fi
        if [ -n "${{ inputs.project-token }}" ]; then auth="--project-token ${{ inputs.project-token }}"; fi
        if [ -n "${{ inputs.force-coverage-parser }}" ]; then force_parser="--force-coverage-parser ${{ inputs.force-coverage-parser }}"; else force_parser=""; fi
        if [ -n "${{ inputs.language }}" ]; then lang="--language ${{ inputs.language }}"; else lang=""; fi

        bash <(curl -Ls https://raw.githubusercontent.com/codacy/codacy-coverage-reporter/master/get.sh) report $lang $force_parser $auth -r "${{ inputs.coverage-reports }}" --partial &&\
        bash <(curl -Ls https://raw.githubusercontent.com/codacy/codacy-coverage-reporter/master/get.sh) final $auth
